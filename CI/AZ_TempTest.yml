# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)($(Build.BuildId))

trigger: none
pr: none
schedules:
  - cron: 0 12 24 3 *
    displayName: Scheduled once(ish)
    branches:
      include:
      - CITesting
    always: true
  - cron: 15 12 24 3 *
    displayName: Scheduled once(ish)
    branches:
      include:
      - CITesting
    always: true

pool:
  vmImage: 'vs2017-win2016'


parameters:
- name: SQLCMDPath
  type: string
  default: 'C:\Program Files\Microsoft SQL Server\110\Tools\Binn'
- name: RequestingBuildId
  type: string
  default: 'NULL'


variables:
  NamePreFix: 'tSQLtCI_DevTestLab_'

jobs:
- job: joba
  
  steps:

  - checkout: none

  - task: CmdLine@2
    name: AgentInfo
    inputs:
      script: |
        @ECHO ON
        systeminfo
        "${{ parameters.SQLCMDPath }}\SQLCMD" -?
        SET

  - task: PowerShell@2
    name: setVar
    inputs:
      targetType: 'inline'
      script: |
        $myvar = '{"DTLName":"tSQLtCI_20200712_2016_2159","SQLVersionEdition":"2016","SQLVmPort":"52137","SQLVmFQDN":"v2159-2016.eastus2.cloudapp.azure.com","DTLRGName":"tSQLtCI_20200712_2016_2159_RG","HiddenVmRGName":"tSQLtCI_20200712_2016_2159-V2159-2016-026004","SQLVersion":"2016","HiddenVmName":"V2159-2016"}'
        Write-Host "##vso[task.setvariable variable=myvar;isOutput=true]$myvar"

  - task: PowerShell@2
    name: readVar
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "1---"
        Write-Host $env:setVar.myvar
        Write-Host "2---"
        Write-Host $(setVar.myvar)
        Write-Host "3---"



- job: jobb
  dependsOn: joba
  variables: 
    myvar: $[ dependencies.joba.outputs['setVar.myvar'] ]
  steps:

  - checkout: none

  - task: CmdLine@2
    name: AgentInfo
    inputs:
      script: |
        @ECHO ON
        systeminfo
        "${{ parameters.SQLCMDPath }}\SQLCMD" -?
        SET

  - task: PowerShell@2
    name: readVar
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "1---"
        Write-Host "${{ variables['myvar'] }}"
        Write-Host "2---"
        Write-Host $env:myvar
        Write-Host "3---"
        Write-Host $(myvar)
        Write-Host "4---"
        Write-Host "${{ variables.myvar }}"
        Write-Host "5---"



- job: jobc
  dependsOn: 
  - jobb
  - joba
  variables: 
    myvar: $[ dependencies.joba.outputs['setVar.myvar'] ]
  steps:

  - checkout: none

  - task: CmdLine@2
    name: AgentInfo
    inputs:
      script: |
        @ECHO ON
        systeminfo
        "${{ parameters.SQLCMDPath }}\SQLCMD" -?
        SET

  - task: PowerShell@2
    name: readVar
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "1---"
        Write-Host "${{ variables['myvar'] }}"
        Write-Host "2---"
        Write-Host $env:myvar
        Write-Host "3---"
        Write-Host $(myvar)
        Write-Host "4---"
        Write-Host "${{ variables.myvar }}"
        Write-Host "5---"






