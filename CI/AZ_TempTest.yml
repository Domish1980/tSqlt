# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)($(Build.BuildId))

trigger: none
pr: none
schedules:
  - cron: 0 12 24 3 *
    displayName: Scheduled once(ish)
    branches:
      include:
      - CITesting
    always: true
  - cron: 15 12 24 3 *
    displayName: Scheduled once(ish)
    branches:
      include:
      - CITesting
    always: true

pool:
  vmImage: 'vs2017-win2016'

strategy:
  matrix:
    Run1:
      myvar: 12
    Run2:
      myvar: 14
    Run3:
      myvar: 16

parameters:
- name: SQLCMDPath
  type: string
  default: 'C:\Program Files\Microsoft SQL Server\110\Tools\Binn'
- name: RequestingBuildId
  type: string
  default: 'NULL'


variables:
  NamePreFix: 'tSQLtCI_DevTestLab_'


steps:
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    KeyVaultName: 'tSQLtSigningKey'
    SecretsFilter: '*'

- task: CmdLine@2
  name: AgentInfo
  inputs:
    script: |
      @ECHO ON
      systeminfo
      "${{ parameters.SQLCMDPath }}\SQLCMD" -?
      SET

- task: AzurePowerShell@4
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    ScriptType: 'InlineScript'
    Inline: |
      get-azsubscription
      get-azcontext
    azurePowerShellVersion: 'LatestVersion'


- task: PowerShell@2
  name: setVar
  inputs:
    targetType: 'inline'
    script: |
      Write-Host $[ variables['myvar'] ]



