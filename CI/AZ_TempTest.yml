# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:.r)($(Build.BuildId))

trigger: none
pr: none
schedules:
  - cron: 0 12 24 3 *
    displayName: Scheduled once(ish)
    branches:
      include:
      - CITesting
    always: true
  - cron: 15 12 24 3 *
    displayName: Scheduled once(ish)
    branches:
      include:
      - CITesting
    always: true

pool:
  vmImage: 'vs2017-win2016'


parameters:
- name: SQLCMDPath
  type: string
  default: 'C:\Program Files\Microsoft SQL Server\110\Tools\Binn'
- name: RequestingBuildId
  type: string
  default: 'NULL'


variables:
  - name: NamePreFix
    value: 'tSQLtCI_DevTestLab_'
  - name: ArtifactBranchName
    value: tSQLt$(Branch.SourceVersion)

resources:
  repositories:
  - repository: tmp6
    type: github
    name: tSQLt/tmp6
    endpoint: GitHub-tSQLt-Robot
    ref: $(ArtifactBranchName)

jobs:
- job: joba
  
  steps:

  - checkout: self
    clean: true
    fetchDepth: 1
    lfs: false
    path: tSQLt

  - checkout: tmp6
    clean: true
    fetchDepth: 1
    lfs: false
    path: tmp6
    persistCredentials: true

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
      KeyVaultName: 'tSQLtSigningKey'
      SecretsFilter: '*'

  - task: CmdLine@2
    name: AgentInfo
    inputs:
      script: |
        @ECHO ON
        systeminfo
        "${{ parameters.SQLCMDPath }}\SQLCMD" -?
        SET
        ECHO $(Pipeline.Workspace)
        ECHO $(Agent.BuildDirectory)
        dir $(Pipeline.Workspace) /s

  - task: CmdLine@2
    name: GetCommitId
    inputs:
      script: |
        @ECHO ON
        ECHO %BUILD_SOURCEVERSION% >CommitId.txt
        MKDIR $(Pipeline.Workspace)\tmp1
        XCOPY CommitId.txt $(Pipeline.Workspace)\tmp1\

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Pipeline.Workspace)\tmp1\'
      artifact: 'tempArtifact'
      publishLocation: 'pipeline'

  - task: DownloadPipelineArtifact@2
    name: DownloadPipelineArtifact
    inputs:
      buildType: 'current'
      artifactName: 'tempArtifact'
      targetPath: '$(Pipeline.Workspace)\tmp2'



  - task: CmdLine@2
    name: StoreInArtifactRepo
    condition: false
    env:
      GITHUB_USERNAME: $(GitHubUserName)
      GITHUB_EMAIL: $(GitHubEmail)
    inputs:
      script: |
        @ECHO ON
        cd $(Pipeline.Workspace)\tmp6
        @ECHO %CD%
        @ECHO -------------------------------
        @ECHO -------------------------------
        git config --global user.email "%GITHUB_EMAIL%"
        git config --global user.name "%GITHUB_USERNAME%"
        @ECHO -------------------------------
        @ECHO -------------------------------
        git show
        @ECHO -------------------------------
        @ECHO -------------------------------
        git log
        @ECHO -------------------------------
        @ECHO -------------------------------
        git status
        