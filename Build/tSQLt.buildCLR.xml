<?xml version="1.0"?>
<project name="tSQLt" default="all" basedir=".">
 <description>Build tSQLt</description>

 <target name="validate.parameters" description="">
  <antcall target="validate.parameter">
   <param name="parameter.name" value="msbuild.path" />
  </antcall>
  <echo message="${msbuild.path}" />
 </target>

 <target
   name="all"
   depends="clean, validate.parameters, init, clr.compile, tSQLtAssemblyKey.compile, clr.testutil.compile, clr.UnsignedEmpty.compile, package.files"
   />


 <!--=======================================================================-->
 <!--========                 Misc                                 =========-->
 <!--=======================================================================-->

 <target name="clean" description="clean all of the things that might be left over from previous builds">
  <delete dir="temp/CLRBuild"/>
  <delete dir="output/CLRBuild/"/>
  <delete dir="../tSQLtCLR/tSQLtCLR/bin/" />
  <delete dir="../tSQLtCLR/tSQLtCLR/obj/" />
  <delete dir="../tSQLtCLR/tSQLtAssemblyKey/bin/" />
  <delete dir="../tSQLtCLR/tSQLtAssemblyKey/obj/" />
  <delete dir="../tSQLtCLR/tSQLtTestUtilCLR/bin/" />
  <delete dir="../tSQLtCLR/tSQLtTestUtilCLR/obj/" />
  <delete dir="../tSQLtCLR/UnsignedEmpty/bin/" />
  <delete dir="../tSQLtCLR/UnsignedEmpty/obj/" />
 </target>

 <target name="init" description="prepare output directory">
  <mkdir dir="output/CLRBuild" />
  <mkdir dir="temp/CLRBuild" />
<!-- <mkdir dir="temp/tSQLtCLR"/> -->
  <property name="build.configuration" value="CruiseControl" />
 </target>

 <target name="validate.parameter">
  <fail message="Parameter '${parameter.name}' is required">
   <condition>
    <not>
     <and>
      <isset property="${parameter.name}"/>
     </and>
    </not>
   </condition>
  </fail>
 </target>

 <!--=======================================================================-->
 <!--========                 Build tSQLt CLRs                     =========-->
 <!--=======================================================================-->

 <target name="clr.compile">
  <echo message="Compile CLR Command: &quot;${msbuild.path}\msbuild.exe&quot; tSQLtCLR.csproj /p:Configuration=${build.configuration} /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/tSQLtCLR/" failonerror="true">
   <arg value="/c"/>
   <arg value="&quot;${msbuild.path}\msbuild.exe&quot; tSQLtCLR.csproj /p:Configuration=${build.configuration} /nologo"/>
  </exec>
 </target>

 <target name="tSQLtAssemblyKey.compile">
  <echo message="Compile CLR Command: &quot;${msbuild.path}\msbuild.exe&quot; tSQLtAssemblyKey.csproj /p:Configuration=${build.configuration} /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/tSQLtAssemblyKey/" failonerror="true">
   <arg value="/c"/>
   <arg value="&quot;${msbuild.path}\msbuild.exe&quot; tSQLtAssemblyKey.csproj /p:Configuration=${build.configuration} /nologo"/>
  </exec>
 </target>

 <target name="clr.testutil.compile">
  <echo message="Compile CLR Command: &quot;${msbuild.path}\msbuild.exe&quot; tSQLtTestUtilCLR.csproj /p:Configuration=${build.configuration} /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/tSQLtTestUtilCLR/" failonerror="true">
   <arg value="/c"/>
   <arg value="&quot;${msbuild.path}\msbuild.exe&quot; tSQLtTestUtilCLR.csproj /p:Configuration=${build.configuration} /nologo"/>
  </exec>
 </target>

 <target name="clr.UnsignedEmpty.compile">
  <echo message="Compile CLR Command: &quot;${msbuild.path}\msbuild.exe&quot; UnsignedEmpty.csproj /p:Configuration=${build.configuration} /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/UnsignedEmpty/" failonerror="true">
   <arg value="/c"/>
   <arg value="&quot;${msbuild.path}\msbuild.exe&quot; UnsignedEmpty.csproj /p:Configuration=${build.configuration} /nologo"/>
  </exec>
 </target>

 <target name="package.files">
  <copy todir="temp/CLRBuild" flatten="true">
   <fileset dir="../tSQLtCLR">
    <include name="*/bin/${build.configuration}/*.dll"/>
   </fileset>
  </copy>
  <zip zipfile="output/CLRBuild/tSQLtCLR.zip">
   <fileset dir="temp/CLRBuild">
    <include name="*.*"/>
   </fileset>
  </zip>
 </target>
</project>